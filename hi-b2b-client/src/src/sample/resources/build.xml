<?xml version="1.0"?>
<!--
   /*
 * Copyright 2011 NEHTA
 *
 * Licensed under the NEHTA Open Source (Apache) License; you may not use this
 * file except in compliance with the License. A copy of the License is in the
 * 'license.txt' file, which should be provided with this work.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
 -->
<project name="nehta-vendorlibrary-java-hiclient"
         basedir="."
         default="dist">

    <property file="${basedir}/build.properties"/>
    <property name="artifact.file" value="${target.dir}/${jar.file}"/>
    <property name="artifact.sources.file" value="${target.dir}/${src.jar.file}"/>
    <property name="artifact.javadocs.file" value="${target.dir}/${javadocs.jar.file}"/>

    <!-- Sample client jar files -->
    <property name="sample.artifact.file" value="${target.dir}/${sample.jar.file}"/>
    <property name="sample.artifact.sources.file" value="${target.dir}/${sample.src.jar.file}"/>
    <property name="sample.artifact.javadocs.file" value="${target.dir}/${sample.javadocs.jar.file}"/>


    <path id="lib.tasks.path">
        <fileset dir="${tasks.lib.dir}">
            <exclude name="*.xsl"/>
        </fileset>
    </path>

    <target name="--clean">
        <delete dir="${target.dir}"/>
        <delete><fileset dir="${dist.dir}" includes="**"/></delete>
    </target>

    <target name="--check-force-clean">
        <available file="${project.root.dir}/downstream.modules.needs.rebuilding" property="force.clean"/>
    </target>

    <target name="--force-clean" depends="--check-force-clean" if="force.clean">
        <delete dir="${target.dir}"/>
    </target>

    <target name="--prepare" depends="--force-clean">
        <!-- Create target directories -->
        <mkdir dir="${target.dir}"/>
        <mkdir dir="${target.dir}/endorsed"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${docs.dir}"/>
        <mkdir dir="${javadocs.dir}"/>
        <mkdir dir="${sample.docs.dir}"/>
        <mkdir dir="${sample.javadocs.dir}"/>
        <mkdir dir="${dist.dir}"/>

        <!-- Environment variables -->
        <!--<property environment="env"/>-->

        <!-- Class paths -->
        <path id="compile.classpath">
            <fileset dir="${lib.provided.dir}" includes="**/*.jar" />
        </path>

        <path id="sample.clients.classpath">
            <pathelement location="${classes.dir}"/>
            <fileset dir="${lib.provided.dir}" includes="**/*.jar" />
        </path>

        <path id="runtime.classpath">
            <pathelement location="${lib.compile.dir}"/>
            <pathelement location="${lib.runtime.dir}"/>
        </path>


    </target>

    <target name="--compile">
        <javac destdir="${classes.dir}"
               srcdir="${src.dir}"
               debug="true"
               fork="true"
               classpathref="compile.classpath"
               includeAntRuntime="no"
               updatedproperty="compiled.src"/>

        <!--  Compile the Sample client files. -->
        <javac destdir="${classes.dir}"
               srcdir="${sample.src.dir}"
               debug="true"
               fork="true"
               classpathref="compile.classpath"
               includeAntRuntime="no"
               updatedproperty="compiled.src"/>

    </target>

    <target name="--docs">
        <!-- Javadocs: API documentation -->
        <javadoc destdir="${javadocs.dir}" classpathref="compile.classpath">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </javadoc>

        <!-- Javadocs: Sample API documentation -->
        <javadoc destdir="${sample.javadocs.dir}" classpathref="sample.clients.classpath">
            <fileset dir="${sample.src.dir}">
                <include name="**/*Sample.java"/>
            </fileset>
        </javadoc>
    </target>


    <target name="--cleanup-build-tmp-files">
        <delete file="${project.root.dir}/downstream.modules.needs.rebuilding"/>
    </target>

    <target name="--lib-clean">
        <delete dir="${lib.compile.dir}"/>
        <mkdir dir="${lib.compile.dir}"/>

        <delete dir="${lib.provided.dir}"/>
        <mkdir dir="${lib.provided.dir}"/>

        <delete dir="${lib.runtime.dir}"/>
        <mkdir dir="${lib.runtime.dir}"/>

    </target>

    <target name="clean" depends="
          --clean"
            description="Deletes generated files and directories"/>

    <target name="docs" depends="
          --prepare,
          --docs"
            description="Generates the documentation"/>

    <target name="package" depends="
          --prepare,
          --compile,
          --docs,
          --package"
            description="Packages the compiled code into a jar"/>


    <target name="dist" depends="
          --prepare,
          --compile,
          --docs,
          --package,
          --dist,
          --cleanup-build-tmp-files"
            description="Builds a distribution"/>

    <target name="--package">
        <!-- Get timestamp -->
        <tstamp>
            <format property="current.time" pattern="dd-MMM-yyyy hh:mm aa"/>
        </tstamp>

        <copy todir="${classes.dir}/META-INF">
            <fileset dir="${src.dir}/META-INF" />
        </copy>

        <!-- Create jar file with compiled classes -->
        <jar destfile="${artifact.file}" compress="false">
            <fileset dir="${classes.dir}">
                <include name="**/*.*"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${project.title}"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor"
                           value="${project.organisation}"/>
                <attribute name="Generated-On" value="${current.time}"/>
            </manifest>
        </jar>

        <!-- Create jar file with source files -->
        <jar destfile="${artifact.sources.file}" compress="false">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
                <exclude name="**/*Sample.java"/>
                <include name="**/*.xml"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${project.title}"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor"
                           value="${project.organisation}"/>
                <attribute name="Generated-On" value="${current.time}"/>
            </manifest>
        </jar>

        <!-- Create jar file with javadoc files -->
        <jar destfile="${artifact.javadocs.file}" compress="false">
            <fileset dir="${javadocs.dir}">
                <include name="**/*"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${project.title}"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor"
                           value="${project.organisation}"/>
                <attribute name="Generated-On" value="${current.time}"/>
            </manifest>
        </jar>

        <!-- Create jar file with compiled sample classes -->
        <jar destfile="${sample.artifact.file}" compress="false">
            <fileset dir="${classes.dir}">
                <include name="**/*Sample.class"/>
                <include name="**/*.xml"/>
            </fileset>

             <fileset dir="${sample.resources.dir}">
                <include name="**/*.jks"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${project.title}"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor"
                           value="${project.organisation}"/>
                <attribute name="Generated-On" value="${current.time}"/>
            </manifest>
        </jar>

        <!-- Create jar file with sample client-->
        <jar destfile="${sample.artifact.sources.file}" compress="false">
            <fileset dir="${sample.src.dir}">
                <include name="**/*Sample.java"/>
                <include name="**/*.xml"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${project.title}"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor"
                           value="${project.organisation}"/>
                <attribute name="Generated-On" value="${current.time}"/>
            </manifest>
        </jar>

        <!-- Create jar file with sample client-->
        <jar destfile="${sample.artifact.javadocs.file}" compress="false">
            <fileset dir="${sample.javadocs.dir}">
                <include name="**/*"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${project.title}"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor"
                           value="${project.organisation}"/>
                <attribute name="Generated-On" value="${current.time}"/>
            </manifest>
        </jar>

    </target>

    <target name="--dist">
        <zip destfile="${dist.dir}/${dist.file}">
            <zipfileset dir="${basedir}">
                <include name="${license.file}"/>
                <include name="${readme.file}"/>
                <include name="${build.file}"/>
                <include name="${build.properties.file}"/>
            </zipfileset>

            <!--Include src and java files and metro.xml-->
            <zipfileset dir="${src.dir}" prefix="src/main/java">
                <include name="**/*.java"/>
                <include name="**/*.xml"/>
                <exclude name="**/*Test.java"/>
            </zipfileset>

            <!--Include sample client java files-->
            <zipfileset dir="${sample.src.dir}" prefix="src/sample/java">
                <include name="**/*.java"/>
            </zipfileset>

            <!--Include sample Java keystore files-->
            <zipfileset dir="${sample.resources.dir}" prefix="src/sample/resources">
                <include name="**/*.jks"/>
                <exclude name="**/*.jks"/>
            </zipfileset>

            <!--Include compiled client library jar, source and javadoc jars.-->
            <zipfileset dir="${target.dir}">
                <include name="${jar.file}"/>
                <include name="${src.jar.file}"/>
                <include name="${javadocs.jar.file}"/>
            </zipfileset>

            <!--Include dependency jar file-->
            <zipfileset dir="${lib.provided.dir}" prefix="lib/provided">
                <include name="**/*.jar" />
            </zipfileset>

        </zip>
    </target>

</project>
